<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!-- 环境配置 -->
    <springProperty scope="context" name="plumelog.url" source="plumelog.url"/>
    <springProperty scope="context" name="plumelog.enable" source="plumelog.enable"/>
    <springProperty scope="context" name="plumelog.appName" source="spring.application.name"/>
    <springProperty scope="context" name="plumelog.env" source="spring.profiles.active"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此过滤器过滤掉所有的trace日志，3.4.1版本logback自带的过滤类-->
<!--        <filter class="com.plumelog.logback.util.FilterSyncLogger">-->
<!--            <level>info</level>-->
<!--            <filterPackage>com.plumelog.trace.aspect.AbstractAspect</filterPackage>-->
<!--        </filter>-->
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 输出到文件 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 滚动策略，这里采用的SizeAndTimeBasedRollingPolicy，基于日志文件大小和时间滚动。 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>logs/${plumelog.appName}/${plumelog.appName}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--单个日志文件的最大体积，到达最大体积后就会触发日志滚动操作，生成新的日志文件 -->
            <MaxFileSize>100MB</MaxFileSize>
            <!-- 控制所有归档日志文件的总大小。当超出总大小上限时，将异步删除最早的归档日志文件。 -->
            <totalSizeCap>1GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!--要保存的归档文件的最大数量，以异步方式删除旧文件。-->
            <MaxHistory>7</MaxHistory>
        </rollingPolicy>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- 输出plumelog -->
    <!--    <appender name="plumelog" class="com.plumelog.logback.appender.RedisAppender">-->
    <!--        <appName>${plumelog.appName}</appName>-->
    <!--        <redisHost>${plumelog.redisHost}</redisHost>-->
    <!--        <redisDb>1</redisDb>-->
    <!--        <env>${plumelog.env}</env>-->
    <!--    </appender>-->

    <!-- 使用lite模式启用下面配置 -->
    <if condition='property("plumelog.enable").contains("true")'>
        <then>
            <appender name="plumelog" class="com.plumelog.logback.appender.LiteAppender">
                <appName>${plumelog.appName}</appName>
                <plumelogHost>${plumelog.url}</plumelogHost>
                <env>${plumelog.env}</env>
            </appender>
        </then>
    </if>


    <!-- 配置日志输出，只输出info，只保留控制台和plumelog输出-->
    <!-- 正常开发环境本地，只输出到控制台，测试环境只输出到plumelog,生产环境输出到本地文件plumelog,因为有plumelog加持本地文件就保留3天即可-->
    <!-- 这些都可以根据环境配置不同加载不同的ref -->
    <root level="info">
        <!--输出到控制台-->
        <appender-ref ref="CONSOLE"/>
        <!-- 输出到文件 -->
        <appender-ref ref="file"/>

        <if condition='property("plumelog.enable").contains("true")'>
            <then>
                <!-- 输出plumelog -->
                <appender-ref ref="plumelog"/>
            </then>
        </if>
    </root>

</configuration>