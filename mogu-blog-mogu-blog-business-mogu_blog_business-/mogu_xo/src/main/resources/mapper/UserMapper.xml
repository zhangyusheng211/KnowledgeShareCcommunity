<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moxi.mogublog.xo.mapper.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.moxi.mogublog.commons.entity.User">
        <id column="uid" property="uid"/>
        <result column="userName" property="userName"/>
        <result column="password" property="password"/>
        <result column="gender" property="gender"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="birthday" property="birthday"/>
        <result column="mobile" property="mobile"/>
        <result column="qqNumber" property="qqNumber"/>
        <result column="weChat" property="weChat"/>
        <result column="validCode" property="validCode"/>
        <result column="summary" property="summary"/>
        <result column="loginCount" property="loginCount"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="lastLoginIp" property="lastLoginIp"/>
        <result column="status" property="status"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        uid
        , userName, passWord, gender, avatar, email, birthday, mobile, qqNumber, weChat, validCode, summary,
        loginCount, lastLoginTime, lastLoginIp, status, createTime, updateTime
    </sql>

    <!--更新用户积分值-->
    <update id="updateCreditsByUserUid">
        update t_user
        set credits = credits + #{credits}
        where uid = #{userUid}
    </update>

    <!--更新用户经验值-->
    <update id="updateExpValueByUserUid">
        update t_user
        set exp_value = exp_value + #{expValue}
        where uid = #{userUid}
    </update>

    <!--获取用户排名-->
    <select id="getUserRank" resultType="java.lang.Integer">
        SELECT b.ranking
        FROM (SELECT *,
                     RANK() OVER (ORDER BY exp_value DESC, create_time DESC) AS ranking
              FROM t_user) AS b
        WHERE b.uid = #{userUid};
    </select>

    <!--更新用户金额-->
    <update id="updateAmountByUserUid">
        update t_user
        set amount = amount + #{operateAmount}
        where uid = #{userUid}
    </update>


</mapper>
